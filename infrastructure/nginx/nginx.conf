# nginx version: 1.21+
# Configuration for Vessel Call Management System Production Environment

# Main context configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;
timer_resolution 100ms;
worker_cpu_affinity auto;
worker_shutdown_timeout 10s;

# Events context
events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
    accept_mutex on;
    accept_mutex_delay 500ms;
}

# HTTP context
http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    server_tokens off;

    # File cache settings
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # MIME types
    include mime.types;
    default_type application/octet-stream;

    # Logging configuration
    log_format custom_json escape=json '{"time":"$time_iso8601","remote_addr":"$remote_addr","request":"$request","status":$status,"body_bytes_sent":$body_bytes_sent,"request_time":$request_time,"http_referrer":"$http_referer","http_user_agent":"$http_user_agent"}';
    access_log /var/log/nginx/access.log custom_json buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;
    log_not_found off;
    log_subrequest off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types 
        text/plain 
        text/css 
        application/json 
        application/javascript 
        text/xml 
        application/xml 
        application/xml+rss 
        text/javascript 
        application/vnd.ms-fontobject 
        application/x-font-ttf 
        font/opentype 
        image/svg+xml 
        image/x-icon;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # SSL configuration
    include ssl.conf;

    # Security headers
    include security-headers.conf;

    # Upstream backend servers
    upstream backend {
        server backend:8080;
        keepalive 32;
    }

    # HTTPS Server
    server {
        listen 443 ssl http2 backlog=65535;
        listen [::]:443 ssl http2 backlog=65535;
        server_name ${NGINX_SERVER_NAME};

        root /usr/share/nginx/html;
        index index.html;

        # Static content
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control public;
            limit_req zone=one burst=10 nodelay;
        }

        # API endpoints
        location /api {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            limit_req zone=one burst=5 nodelay;
        }

        # WebSocket endpoints
        location /ws {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            proxy_connect_timeout 7s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # HTTP redirect server
    server {
        listen 80 backlog=65535;
        listen [::]:80 backlog=65535;
        server_name ${NGINX_SERVER_NAME};

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
            add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload' always;
        }
    }
}